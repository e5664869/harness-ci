pipeline:
  name: Build java
  identifier: Build_java
  projectIdentifier: default_project
  orgIdentifier: default
  properties:
    ci:
      codebase:
        connectorRef: GitHubSource
        repoName: container-cicd
        build: <+input>
  stages:
    - stage:
        name: Build
        identifier: Build
        description: ""
        type: CI
        spec:
          caching:
            enabled: true
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Docker
            spec: {}
          execution:
            steps:
              - step:
                  type: RunTests
                  name: Build-Code
                  identifier: RunTests_1
                  spec:
                    language: Java
                    buildTool: Maven
                    args: test
                    packages: io.harness
                    runOnlySelectedTests: true
                    postCommand: mvn package -DskipTests
                    reports:
                      type: JUnit
                      spec:
                        paths:
                          - target/surefire-reports/*.xml
                    enableTestSplitting: false
              - step:
                  type: Run
                  name: CodeQualityCheck
                  identifier: CodeQualityCheck
                  spec:
                    shell: Sh
                    command: |-
                      mvn clean verify sonar:sonar \
                        -Dsonar.projectKey=Harness \
                        -Dsonar.host.url=http://35.232.242.38:9000 \
                        -Dsonar.login=116ecff32df4e3636f3aa8ac8f101e7dfbbfd601
                  description: Code Quality Check using SonarQube
              - step:
                  type: Run
                  name: BuildDockerImage
                  identifier: BuildDockerImage
                  spec:
                    shell: Sh
                    command: docker build --rm=true -f Dockerfile -t ganeshmete11/ultimate-cicd:${BUILD_NUMBER} . --pull=true --label org.opencontainers.image.source=https://github.com/e5664869/container-cicd.git --label org.opencontainers.image.url=https://github.com/e5664869/container-cicd
                    envVariables:
                      BUILD_NUMBER: <+pipeline.sequenceId>
              - step:
                  type: Run
                  name: PushDockerImage
                  identifier: PushDockerImage
                  spec:
                    shell: Sh
                    command: |-
                      docker login -u ganeshmete11@gmail.com -p ${Password}
                      docker push ganeshmete11/ultimate-cicd:${BUILD_NUMBER}
                    envVariables:
                      BUILD_NUMBER: <+pipeline.sequenceId>
                      Password: Honda@123
                  description: Push Docker Image to Docker Hub
              - step:
                  type: Run
                  name: CleanLocalImages
                  identifier: CleanLocalImages
                  spec:
                    shell: Sh
                    command: |
                      docker rmi ganeshmete11/ultimate-cicd:${BUILD_NUMBER}
                    envVariables:
                      BUILD_NUMBER: <+pipeline.sequenceId>
                  description: Clean Local Images


